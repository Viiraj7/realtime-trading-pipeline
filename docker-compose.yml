version: '3.8' # This line is okay, but you can remove it later to silence the warning

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      # --- Kafka Fix ---
      # Explicitly define roles for newer Kafka versions (KRaft mode without ZK needs this)
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093' # Refers to itself
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      # ---------------
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # Link to Zookeeper (still needed if not using pure KRaft, image defaults might vary)
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'

  postgres:
    image: timescale/timescaledb:latest-pg14
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/init.sql

  producer:
    build: .
    container_name: producer
    # --- Python Path Fix v2 ---
    command: python src/ingest/producer.py # Run script directly
    environment:
      PYTHONPATH: /app # Tell Python imports start from /app
    # -----------------------
    restart: on-failure
    env_file: .env
    depends_on:
      - kafka

  etl_worker:
    build: .
    container_name: etl_worker
    # --- Python Path Fix v2 ---
    command: python src/processing/etl_worker.py # Run script directly
    environment:
      PYTHONPATH: /app # Tell Python imports start from /app
    # -----------------------
    restart: on-failure
    env_file: .env
    depends_on:
      - kafka
      - postgres

volumes:
  postgres_data: